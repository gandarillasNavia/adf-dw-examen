{
	"name": "df_silver_clientes",
	"properties": {
		"folder": {
			"name": "Silver"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_dw_clientes",
						"type": "DatasetReference"
					},
					"name": "Clientes"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_dw_clientes_bd",
						"type": "DatasetReference"
					},
					"name": "ClientesBD"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_dw_clientes_location",
						"type": "DatasetReference"
					},
					"name": "ClientesLocation"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_silver_clientes",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "cast1"
				},
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          cst_id as string,",
				"          cst_key as string,",
				"          cst_firstname as string,",
				"          cst_lastname as string,",
				"          cst_marital_status as string,",
				"          cst_gndr as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Clientes",
				"source(output(",
				"          CID as string,",
				"          BDATE as string,",
				"          GEN as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ClientesBD",
				"source(output(",
				"          CID as string,",
				"          CNTRY as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ClientesLocation",
				"ClientesBD, Clientes join(CID == cst_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, ClientesLocation join(ClientesBD@CID == ClientesLocation@CID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"select1 cast(output(",
				"          BDATE as date 'yyyy-MM-dd'",
				"     ),",
				"     errors: true) ~> cast1",
				"join2 select(mapColumn(",
				"          CID = ClientesBD@CID,",
				"          BDATE,",
				"          GEN,",
				"          cst_key,",
				"          cst_firstname,",
				"          cst_lastname,",
				"          cst_marital_status,",
				"          CNTRY",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"cast1 derive(cst_firstname = trim(cst_firstname),",
				"          cst_lastname = trim(cst_lastname)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          cst_id as integer,",
				"          cst_key as string,",
				"          cst_firstname as string,",
				"          cst_lastname as string,",
				"          cst_marital_status as string,",
				"          cst_gndr as string,",
				"          BDATE as date,",
				"          CNTRY as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          cst_id = CID,",
				"          cst_key,",
				"          cst_firstname,",
				"          cst_lastname,",
				"          cst_marital_status,",
				"          cst_gndr = GEN,",
				"          BDATE,",
				"          CNTRY",
				"     )) ~> sink1"
			]
		}
	}
}